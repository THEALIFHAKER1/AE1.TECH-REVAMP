import type { Metadata } from "next";
import localFont from "next/font/local";
import "@/styles/global.css";
import { ThemeProvider } from "@/components/providers/theme-provider";
import { ViewTransitions } from "next-view-transitions";
import DebugInfo from "@/components/debug/debug-info";
import Maintenance from "./maintenance";
import WrapperPage from "../components/layouts/wrapper/wrapper-page";
import WrapperLoader from "../components/layouts/wrapper/wrapper-loader";
import Footer from "../components/layouts/footer/footer";
import Navbar from "@/components/layouts/navbar/navbar";
import { env } from "@/env.mjs";
const geistSans = localFont({
    src: "../../public/fonts/GeistVF.woff",
    variable: "--font-geist-sans",
    weight: "100 900",
});
const geistMono = localFont({
    src: "../../public/fonts/GeistMonoVF.woff",
    variable: "--font-geist-mono",
    weight: "100 900",
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const isMaintenance = env.IS_MAINTENANCE === "true";
    const isDev = env.NODE_ENV === "development";
    return (
        <ViewTransitions>
            <html lang="en" suppressHydrationWarning>
                <body
                    className={`${geistSans.variable} ${geistMono.variable} min-h-dvh antialiased overscroll-none select-none selection:bg-foreground selection:text-background`}
                >
                    <ThemeProvider
                        attribute="class"
                        defaultTheme="system"
                        enableSystem
                        disableTransitionOnChange
                    >
                        <WrapperLoader>
                            {isMaintenance ? (
                                <Maintenance />
                            ) : (
                                <>
                                    <Navbar />
                                    <WrapperPage>{children}</WrapperPage>
                                    <Footer />
                                </>
                            )}
                            <DebugInfo isDev={isDev} />
                        </WrapperLoader>
                    </ThemeProvider>
                </body>
            </html>
        </ViewTransitions>
    );
}
